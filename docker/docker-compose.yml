services:
  api:
    container_name: api
    image: mcr.microsoft.com/dotnet/sdk:8.0
    user: root
    working_dir: /app
    ports:
      - 80:3456
      - 443:3457
    volumes:
      - ..:/app
    command: dotnet watch run
    networks:
      - dotnet-network
    environment:
      - ASPNETCORE_URLS="http://+:3456,https://+:3454"

  db:
    container_name: db
    image: mcr.microsoft.com/mssql/server:2019-latest
    restart: always
    volumes:
      - ./db:/var/opt/mssql/data
      - ./import-db:/docker-entrypoint-initdb.d
    user: root
    # command: "/opt/mssql-tools18/bin/sqlcmd -l 5 -S 127.0.0.1 -U sa -P '${MSSQL_SA_PASSWORD}' -C -d master -i docker-entrypoint-initdb.d/db.sql"
    environment:
      MSSQL_SA_PASSWORD: ${MSSQL_SA_PASSWORD}
      MSSQL_PASSWORD: ${MSSQL_SA_PASSWORD}
      ACCEPT_EULA: "Y"
    ports:
      - 1433:1433
    env_file:
      - .env
    networks:
      - dotnet-network

  redis-server:
    image: redis:alpine
    container_name: redis-server
    restart: always
    command: redis-server
    ports:
      - 6379:6379
    networks:
      - dotnet-network

  redis-insight:
    container_name: redis-insight
    image: redislabs/redisinsight:latest
    restart: always
    ports:
      - 5540:5540
    networks:
      - dotnet-network

  adminer:
    container_name: adminer
    image: adminer
    restart: always
    ports:
      - 8080:8080
    env_file: .env
    environment:
      ADMINER_DEFAULT_SERVER: ${DB_HOST}
      ADM_INSTALL_MSSQL: true
      PHP_FPM_INSTALL_MSSQL: true
      WORKSPACE_INSTALL_MSSQL: true
    networks:
      - dotnet-network

networks:
  dotnet-network:
    external: true
    
